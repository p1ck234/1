#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <iterator>
#include <sstream>
#include <list>

using namespace std;

const int V = 4;

void Way(int i, int j) {
    if (M[i][j] == i) if (i == j) cout << i + 1; else cout << i + 1 << "->" << j + 1 << endl;
    else {
        Way(i, M[i][j]);
        Way(M[i][j], j);
    }
};

int** inF(ifstream& f, int n, int m, char s[40])
{
    int i, j;
    int** a;
    a = new int* [n];
    if (a == NULL) {
        cout << "\n Не хватает озу для строк";
        exit(1);
    }
    for (i = 0; i < n; i++)
    {
        a[i] = new int[m];
        if (a[i] == NULL) {
            cout << "\n Не хватает озу для столбцов";
            exit(1);
        }
    }
    f.open(s);
    if (f.fail()) {
        cout << "\n ошибка";
        exit(1);
    }
    for (i = 0; i < n; i++)
    {
        for (j = 0; j < m; j++)
            f >> a[i][j];
    }
    f.close();
    return a;
}
int M[V][V];

void Dis(int* A[], int* D[], int M[V][V], int N) { 
    for (int i = 0; i < N; i++)
        for (int j = 0; j < N; j++) D[i][j] = A[i][j];
    for (int i = 0; i < N; i++) D[i][i] = 0;
    for (int m = 0; m < N; m++)
        for (int i = 0; i < N; i++)
            for (int j = 0; j < N; j++) {

                if (D[i][j] > D[i][m] + D[m][j]) {
                    M[i][j] = M[m][j];
                    D[i][j] = min(D[i][j], D[i][m] + D[m][j]);
                }
            }
}



int main() {
    setlocale(0, "");
    ifstream fin;
    char s[40] = "Input.txt";
    int n = 4;
    int m = 4;
    int** graph = new int* [n];
    for (int i = 0; i < n; i++) {
        graph[i] = new int[n];
    }
    graph = inF(fin, n, m, s);
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            cout << graph[i][j] << " ";
        }
        cout << endl;
    }
    int** D = new int* [n];
    for (int i = 0; i < n; i++) {
        D[i] = new int[n];
    }
    for (int i = 0; i < 4; i++) {
        for (int j = 0; j < 4; j++) {
            M[i][j] = i;
        }
    }
    Dis(graph, D, M, n);
    for (int i = 0; i < 4; i++) {
        for (int j = 0; j < 4; j++) {
            cout << M[i][j] << " ";
        }
        cout << endl;
    }
    cout << "Минимальный путь \n";
    Way(2, 0);
}

Input:
0 1 3 1
2 1 7 15000
6 5 0 2
3 15000 4 1