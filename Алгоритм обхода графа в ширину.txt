#include <iostream>
#include <iomanip>
#include <fstream>
#include <vector>
#include <queue>
using namespace std;
const int n = 7;
bool visited[n];

int main()
{
    const int n = 7;

    string filepath = "input.txt";
    ifstream input(filepath);

    int rowsCount, colsCount;
    input >> rowsCount >> colsCount;

    int** matrix = new int* [rowsCount];

    for (unsigned i = 0; i < rowsCount; i++)
    {
        matrix[i] = new int[colsCount];
        for (unsigned j = 0; j < colsCount; j++)
            input >> matrix[i][j];

    }
    input.close();
    bool uses[n];
    queue<int> MyQueue;
    MyQueue.push(0);
    uses[0] = true;
    while (!MyQueue.empty()) { // пока очередь не пуста
        int node = MyQueue.front();
        MyQueue.pop();
        uses[node] = 2;
        for (int j = 0; j < n; j++) {
            if (matrix[node][j] == 1 && uses[j] == 0)
            { // если вершина смежная и не посещена
                MyQueue.push(j); // добавляем ее в очередь
                uses[j] = 1;
            }
        }
        cout << node << endl; // выводим номер вершины
    }
    return 0;
}


input:
0 1 1 1 1 0 0
0 0 0 1 0 0 0
0 0 0 0 0 1 1
0 0 0 0 1 0 0
0 0 0 0 0 0 0
0 0 0 0 0 0 1
0 0 0 0 0 0 0
