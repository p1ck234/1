#include<iostream>
#include <fstream>
using namespace std;

const int INF = 99999;


int main()
{
    string filepath = "C:\\files\\file.txt";
    ifstream input(filepath);

    int rowsCount, colsCount;
    input >> rowsCount >> colsCount;

    int** matrix = new int* [rowsCount];

    for (unsigned i = 0; i < rowsCount; i++)
    {
        matrix[i] = new int[colsCount];
        for (unsigned j = 0; j < colsCount; j++)
        {
            input >> matrix[i][j];
            cout << matrix[i][j] << " ";
        }
        cout << endl;
    }
    input.close();


    int no_edge;

    int selected[rowsCount];

    memset(selected, false, sizeof(selected));

    no_edge = 0;

    selected[0] = true;

    int x;            //  row number
    int y;            //  col number

    // print for edge and weight
    cout << "Edge" << " : " << "Weight";
    cout << endl;
    while (no_edge < rowsCount - 1)
    {
        int min = INF;
        x = 0;
        y = 0;

        for (int i = 0; i < rowsCount; i++) {
            if (selected[i]) {
                for (int j = 0; j < colsCount; j++) {
                    if (!selected[j] && matrix[i][j]) { // not in selected and there is an edge
                        if (min > matrix[i][j]) {
                            min = matrix[i][j];
                            x = i;
                            y = j;
                        }

                    }
                }
            }
        }
        cout << x << " - " << y << " :  " << matrix[x][y];
        cout << endl;
        selected[y] = true;
        no_edge++;
    }

    return 0;
}

files:
0 3 7 6 0 0 0
0 0 4 0 5 0 0
0 0 0 1 3 3 0
3 0 1 0 0 5 0
0 0 0 0 0 1 4
0 2 0 0 0 0 8
0 0 0 0 0 0 0
