#include <iostream>
#include <iomanip>
#include <fstream>
#include <vector>
#include <queue>
using namespace std;

const int n = 4;

int ans[n]; int cht = 0;

bool used[n];

void dfs(int v, int** matrix)
{
    used[v] = true;
    for (int i = 0; i < n; i++)
    {
        if (matrix[v][i] && !used[i])
            dfs(i, matrix);
    }
    ans[cht++] = v;
}

int main()
{
    string filepath = "input.txt";
    ifstream input(filepath);

    int rowsCount, colsCount;
    input >> rowsCount >> colsCount;

    int** matrix = new int* [rowsCount];

    for (unsigned i = 0; i < rowsCount; i++)
    {
        matrix[i] = new int[colsCount];
        for (unsigned j = 0; j < colsCount; j++)
            input >> matrix[i][j];

    }
    input.close();

    for (int i = 0; i < rowsCount; i++)
    {
        for (int j = 0; j < colsCount; j++)
        {
            cout << matrix[i][j] << " ";
        }
        cout << endl;
    }

    for (int i = 0; i < n; i++)
        if (!used[i]) dfs(i, matrix);
    cout << endl << "ans:" << endl;
    for (int i = n - 1; i >= 0; i--)
    {
        cout << ans[i] + 1 << " ";
    }
    return 0;
}


input:
0 1 1 1 1 0 0
0 0 0 1 0 0 0
0 0 0 0 0 1 1
0 0 0 0 1 0 0
0 0 0 0 0 0 0
0 0 0 0 0 0 1
0 0 0 0 0 0 0